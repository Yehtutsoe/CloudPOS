@model SaleWithSaleItemViewModel

@{
    ViewData["Title"] = "Sale";
}

<h3>Add Sale Record</h3>
<br />

@if (ViewData["Info"] != null)
{
    if (Convert.ToBoolean(ViewData["status"]))
    {
        <div class="alert alert-success" role="alert">
            @ViewData["Info"]
        </div>
    }
    else
    {
        <div class="alert alert-danger" role="alert">
            @ViewData["Info"]
        </div>
    }
}

<form asp-action="Entry" asp-controller="Sale" method="post" id="saleForm">
    <div class="container mt-3">
        <div class="row align-item-center">
            <div class="col-3">
                <!--Sale Date-->
                <div class="form-group">
                    <label class="form-label">Sale Date</label>
                    <input type="date" asp-for="SaleOrder.SaleDate" class="form-control" required />
                    <span class="text-danger" asp-validation-for="SaleOrder.SaleDate"></span>
                </div>
                <!--Voucher No-->
                <div class="form-group">
                    <label class="form-label">Voucher No</label>
                    <input type="text" asp-for="SaleOrder.VoucherNo" class="form-control" required />
                    <span class="text-danger" asp-validation-for="SaleOrder.VoucherNo"></span>
                </div>
            </div>
            <!-- RetailSale and WholeSale -->
            <div class="col-4 d-flex align-items-center">
                <div class="form-check me-3">
                    <input type="radio" id="retail" name="saleType" value="Retail" class="form-check-input" checked>
                    <label for="retail" class="form-check-label">RetailSale</label>
                </div>
                <div class="form-check me-3">
                    <input type="radio" id="wholesale" name="saleType" value="Wholesale" class="form-check-input">
                    <label for="wholesale" class="form-check-label">WholeSale</label>
                </div>
                
                <!-- Stock Switch -->
                <div class="form-check form-switch ms-3">
                    <input type="checkbox" id="stockSwitch" class="form-check-input" checked>
                    <label for="stockSwitch" class="form-check-label">Stock Off/On</label>
                    <input type="hidden" id="stockSwitchHidden" name="StockSwitch" />
                </div>

            </div>
        </div>
    </div>

    <div class="container mt-3">
        <div class="row align-center">
            <!-- Bar Code -->
            <div class="col-2 form-group">
                <label class="form-label" for="barcode">BarCode</label>
                <input type="text" id="barcode" class="form-control" placeholder="Scan or Enter" />
            </div>
            <!-- Product -->
            <div class="col-2 form-group">
                <label class="form-label">Product</label>
                <select name="ProductId" id="itemId" class="form-select">
                    <option value="">[ Select One ]</option>
                    @foreach (var item in ViewBag.Products)
                    {
                        <option value="@item.Id">@item.Name</option>
                    }
                </select>
            </div>
            <!--Price-->
            <div class="col-2 form-group">
                <label class="form-label" for="price">Price</label>
                <input type="number" id="price" class="form-control" placeholder="0.00" />
            </div>
            <!--Quantity-->
            <div class="col-2 form-group">
                <label class="form-label" for="quantity">Quantity</label>
                <input type="number" id="quantity" class="form-control" placeholder="0.00" />
            </div>
            <!--Discount Amount-->
            <div class="col-2 form-group">
                <label class="form-label" for="discountAmount">Discount Amount</label>
                <input type="number" id="discountAmount" class="form-control" placeholder="0.00" />
            </div>
            <!-- Add Button -->
            <div class="col-1">
                <button type="button" id="addButton" class="btn btn-primary mt-4">Add</button>
            </div>
            @* Hidden input fields to enable MVC binding for ItemDetails *@
            <div id="hiddenSaleDetails"></div>
        </div>
    </div>

    <div class="container mt-3">
        <table class="table" id="itemListTable" style="display: none;">
            <thead>
                <tr>
                    <th>Product</th>
                    <th>Price</th>
                    <th>Qty</th>
                    <th>Disc %</th>
                    <th>Disc Amt</th>
                    <th>Amount</th>
                    <th>Total</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                <!-- Dynamic rows will be added here -->
            </tbody>
        </table>
    </div>

    <div class="container mt-3 d-flex justify-content-end">
        <div class="form-container">
            <!--Sub Total-->
            <div class="row mb-1">
                <div class="col-4 d-flex">
                    <label class="form-label" asp-for="SaleOrder.SubTotal">Sub Total:</label>
                </div>
                <div class="col-8 d-flex">
                    <input type="text" asp-for="SaleOrder.SubTotal" id="subTotal" class="form-control" readonly />
                </div>
            </div>
            <!--Grand Total-->
            <div class="row mb-1">
                <div class="col-4 d-flex">
                    <label class="form-label" asp-for="SaleOrder.TotalAmount">Grand Total:</label>
                </div>
                <div class="col-8 d-flex">
                    <input type="text" asp-for="SaleOrder.TotalAmount" id="grandTotal" class="form-control" readonly />
                </div>
            </div>
            <!--Discount-->
            <div class="row mb-1">
                <div class="col-4 d-flex">
                    <label asp-for="SaleOrder.DiscountPercent">Discount (%):</label>
                </div>
                <div class="col-4 d-flex">
                    <input type="number" asp-for="SaleOrder.DiscountPercent" id="overallDiscountPercent" class="form-control" placeholder="%" min="0" max="100">
                </div>
                <div class="col-4 d-flex">
                    <input type="number" asp-for="SaleOrder.DiscountAmount" id="overallDiscountAmount" class="form-control">
                </div>
            </div>
            <!--Net Total-->
            <div class="row mb-1">
                <div class="col-4 d-flex">
                    <label class="form-label" asp-for="SaleOrder.NetTotal">Net Total:</label>
                </div>
                <div class="col-8 d-flex">
                    <input type="text" asp-for="SaleOrder.NetTotal" id="netTotal" class="form-control" readonly />
                </div>
            </div>
            <!--Cash Amount-->
            <div class="row mb-1">
                <div class="col-4 d-flex">
                    <label class="form-label" asp-for="SaleOrder.CashAmount">Cash Amount</label>
                </div>
                <div class="col-8 d-flex">
                    <input type="number" asp-for="SaleOrder.CashAmount" id="cashAmount" class="form-control" />
                </div>
            </div>
            <!--Balance-->
            <div class="row mb-1">
                <div class="col-4 d-flex">
                    <label class="form-label" asp-for="SaleOrder.Balance">Balance:</label>
                </div>
                <div class="col-8 d-flex">
                    <input type="text" asp-for="SaleOrder.Balance" id="balance" class="form-control" readonly />
                </div>
            </div>
            <!--Total Return Amount-->
            <div class="row mb-1">
                <div class="col-4 d-flex">
                    <label asp-for="SaleOrder.TotalReturnAmount" class="form-label me-2">Total Return Amount:</label>
                </div>
                <div class="col-8 d-flex">
                    <input type="text" asp-for="SaleOrder.TotalReturnAmount" id="totalReturnAmount" class="form-control" placeholder="0.00" readonly>
                </div>
            </div>
            <!-- Save and Refresh Buttons -->
            <div class="row mt-3">
                <div class="col-6 d-flex justify-content-end">
                    <button type="submit" id="entryButton" class="btn btn-success me-2">Entry</button>
                    <button type="button" id="refreshButton" class="btn btn-warning">Refresh</button>
                </div>
            </div>
        </div>
    </div>
</form>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>


        // Barcode input handler

    $(document).ready(function () {
        let itemIndex = 0;
        $('#barcode').on('change', function () {
            var barcode = $(this).val();
            if (barcode) {
                $.ajax({
                    url: '@Url.Action("GetProductDetails", "Sale")',
                    type: 'GET',
                    data: { barCode: barcode },
                    success: function (data) {
                        if (data) {
                            console.log(data);
                            // Assuming data contains ProductId, Price, and ProductName
                            $('#itemId').val(data.productId);
                            var saleType = $('input[name="saleType"]:checked').val();
                            if(saleType === 'Retail'){
                                $('#price').val(data.retailSalePrice || 0.00);// or data.details based on your logic
                            }else if(saleType === 'Wholesale'){
                                $('#price').val(data.wholeSalePrice || 0.00);
                            }
                             
                        } else {
                            alert('Product not found.');
                        }
                    },
                    error: function () {
                        alert('Error retrieving product details.');
                    }
                });
           
            }
        });
        //stock Switch
        $('#stockSwitch').on('change', function () {
            var isChecked = $(this).is(':checked');
            $('#stockSwitchHidden').val(isChecked ? "true" : "false");
            console.log('Stock switch toggled:', isChecked ? 'On' : 'Off');
            });
        // Add button handler
        $('#addButton').on('click', function () {
            var itemId = $('#itemId').val();
            console.log(itemId);
            var itemName = $('#itemId option:selected').text();
            var price = parseFloat($('#price').val()) || 0;
            var quantity = parseInt($('#quantity').val()) || 0;
            var discountAmount = parseFloat($('#discountAmount').val()) || 0;

            // Validation
            if (!itemId || price <= 0 || quantity <= 0) {
                alert("Please fill all required fields.");
                return;
            }

            var amount = (price * quantity).toFixed(2);
            var total = amount - discountAmount;

            // Append new row
            var newRow = `
                <tr>
                    <td>${itemName}</td>
                    <td>${price.toFixed(2)}</td>
                    <td>${quantity}</td>
                    <td>${discountAmount > 0 ? (discountAmount / amount * 100).toFixed(2) : '0.00'}</td>
                    <td>${discountAmount > 0 ? discountAmount.toFixed(2) : '0.00'}</td>
                    <td>${amount}</td>
                    <td>${total.toFixed(2)}</td>
                    <td>
                        <button type="button" class="btn btn-danger btn-sm delete-row">Delete</button>
                    </td>
                </tr>
            `;

            $('#itemListTable tbody').append(newRow);
            $('#itemListTable').show();

            // Add hidden inputs for form submission
            $('#hiddenSaleDetails').append(`
                <input type="hidden" name="SaleDetails[${itemIndex}].ProductId" value="${itemId}" />
                <input type="hidden" name="SaleDetails[${itemIndex}].Price" value="${price.toFixed(2)}" />
                <input type="hidden" name="SaleDetails[${itemIndex}].Quantity" value="${quantity}" />
                <input type="hidden" name="SaleDetails[${itemIndex}].DiscountAmount" value="${discountAmount.toFixed(2)}" />
                <input type="hidden" name="SaleDetails[${itemIndex}].Amount" value="${amount}" />
                <input type="hidden" name="SaleDetails[${itemIndex}].Total" value="${total.toFixed(2)}" />
            `);

            itemIndex++;
            calculateTotals();
        });

        // Delete row handler
        $('#itemListTable').on('click', '.delete-row', function () {
            if (confirm("Are you sure you want to delete this item?")) {
                $(this).closest('tr').remove();
                calculateTotals();
            }
        });

        // Calculate totals function
        function calculateTotals() {
            let subTotal = 0;

            $('#itemListTable tbody tr').each(function () {
                subTotal += parseFloat($(this).find('td:nth-child(7)').text()) || 0;
            });

            $('#subTotal').val(subTotal.toFixed(2));

            const overallDiscountPercent = parseFloat($('#overallDiscountPercent').val()) || 0;
            const overallDiscountAmount = (subTotal * overallDiscountPercent) / 100;
            $('#overallDiscountAmount').val(overallDiscountAmount.toFixed(2));

            const grandTotal = subTotal - overallDiscountAmount;
            $('#grandTotal').val(grandTotal.toFixed(2));

            const cashAmount = parseFloat($('#cashAmount').val()) || 0;
            const balance = grandTotal - cashAmount;
            $('#balance').val(balance.toFixed(2));
        }

        // Sync discount percentage and amount
        $('#overallDiscountPercent, #overallDiscountAmount').on('input', function () {
            calculateTotals();
        });

        // Refresh button handler
        $('#refreshButton').on('click', function () {
            if (confirm("Are you sure you want to refresh? Unsaved changes will be lost.")) {
                location.reload();
            }
        });

        // Entry button handler
        $('#entryButton').on('click', function (event) {
            var cashAmount = parseFloat($("#cashAmount").val()) || 0;
            if (cashAmount <= 0) {
                alert("Please fill cash amount.");
                event.preventDefault();
            }
        });
    });
</script>