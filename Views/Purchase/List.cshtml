@model IEnumerable<PurchaseViewModel>

@{
    ViewData["Title"] = "Purchase List";
}

<h3 class="mb-4 text-primary">Purchase List</h3>

@{
    var info = TempData["Info"];
}
@if (info != null)
{
    <div class="alert @(Convert.ToBoolean(TempData["Status"]) ? "alert-info" : "alert-danger")">
        @info
    </div>
}

<!-- Include jQuery & DataTables CSS/JS -->
<link rel="stylesheet" href="https://cdn.datatables.net/1.13.4/css/jquery.dataTables.min.css">
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.datatables.net/1.13.4/js/jquery.dataTables.min.js"></script>
<!-- Include SweetAlert for confirmation dialogs -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<div class="card p-4 shadow-sm">
    <form id="filterForm" method="get">
        <div class="row">
            <div class="col-md-3">
                <label class="form-label fw-bold">From Date</label>
                <input type="date" class="form-control" name="fromDate" />
            </div>
            <div class="col-md-3">
                <label class="form-label fw-bold">To Date</label>
                <input type="date" class="form-control" name="toDate" />
            </div>
            <div class="col-md-3">
                <label class="form-label fw-bold">Voucher No</label>
                <select class="form-select" name="PurchaseId">
                    <option value="">[ Select Voucher NO ]</option>
                    @if (ViewBag.Purchases != null)
                    {
                        @foreach (var purchase in ViewBag.Purchases)
                        {
                            <option value="@purchase.Id">@purchase.VoucherNo</option>
                        }
                    }
                    else
                    {
                        <option disabled>No Voucher NO available</option>
                    }
                </select>
            </div>
            <div class="col-md-3">
                <label class="form-label fw-bold">Supplier</label>
                <select class="form-select" name="SupplierId">
                    <option value="">[ Select Supplier ]</option>
                    @if (ViewBag.Suppliers != null)
                    {
                        foreach (var supplier in ViewBag.Suppliers)
                        {
                            <option value="@supplier.Id">@supplier.Name</option>
                        }
                    }
                    else
                    {
                        <option disabled>No Supplier available</option>
                    }
                </select>
            </div>
        </div>
        <div class="text-end mt-3">
            <button type="submit" class="btn btn-primary"><i class="fa-solid fa-search"></i> Search</button>
            <a href="/Purchase/entry" class="btn btn-success"><i class="fa-solid fa-plus"></i> New Purchase</a>
        </div>
    </form>
</div>

<div class="table-responsive mt-4">
    <table class="table table-hover table-bordered" id="PurchaseDataTable">
        <thead class="table-dark">
            <tr>
                <th>No</th>
                <th>Purchase Date</th>
                <th>Supplier</th>
                <th>Voucher</th>
                <th>Total Amount</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @if (Model != null && Model.Any())
            {
                int i = 1;
                foreach (var item in Model)
                {
                    <tr>
                        <td>@i</td>
                        <td>@item.PurchaseDate.ToString("dd-MM-yyyy")</td>
                        <td>@item.SupplierInfo</td>
                        <td>@item.VoucherNo</td>
                        <td class="text-end">@item.TotalAmount.ToString("C")</td>
                        <td>
                            <button class="btn btn-danger delete-button" data-url="/purchase/Delete?id=@item.Id" data-name="@item.VoucherNo">
                                <i class="fa-solid fa-trash"></i>
                            </button>
                        </td>
                    </tr>
                    i++;
                }
            }
            else
            {
                <tr>
                    <td colspan="6" class="text-center">No data available!</td>
                </tr>
            }
        </tbody>
        @if (Model != null && Model.Any())
        {
            <tfoot>
                <tr class="fw-bold">
                    <td colspan="4" class="text-end">Total</td>
                    <td class="text-end">@Model.Sum(x => x.TotalAmount).ToString("C")</td>
                    <td></td>
                </tr>
            </tfoot>
        }
    </table>
</div>

<script>
    $(document).ready(function () {
        // Initialize DataTable
        if ($("#PurchaseDataTable").length > 0) {
            try {
                var table = $("#PurchaseDataTable").DataTable({
                    "paging": true,
                    "pageLength": 10,
                    "lengthChange": true,
                    "searching": true,
                    "ordering": true,
                    "info": true,
                    "autoWidth": false,
                    "responsive": true,
                    "dom": '<"top"lf>rt<"bottom"ip><"clear">',
                    "footerCallback": function (row, data, start, end, display) {
                        // Keep footer visible
                        $(this.api().table().footer()).show();
                    }
                });

                // Make sure footer stays visible after pagination
                table.on('draw.dt', function () {
                    $('#PurchaseDataTable tfoot').show();
                });

            } catch (error) {
                console.error("DataTables initialization error:", error);
                Swal.fire('Error', 'Failed to initialize table: ' + error.message, 'error');
            }
        }

        // Handle delete action
        $(document).on("click", ".delete-button", function (e) {
            e.preventDefault();
            let url = $(this).data("url");
            let name = $(this).data("name");

            Swal.fire({
                title: 'Are you sure?',
                text: `You are about to delete "${name}". This action cannot be undone.`,
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Yes, delete it!',
                cancelButtonText: 'Cancel'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: url,
                        type: 'POST',
                        success: function (response) {
                            Swal.fire({
                                title: 'Deleted!',
                                text: `"${name}" has been deleted successfully.`,
                                icon: 'success'
                            }).then(() => {
                                location.reload();
                            });
                        },
                        error: function (xhr) {
                            let errorMessage = xhr.responseText ? xhr.responseText : 'Failed to delete. Please try again!';
                            Swal.fire('Error', errorMessage, 'error');
                        }
                    });
                }
            });
        });

        // Validate search filters before submitting
        $('#filterForm').on('submit', function (event) {
            let fromDate = $('[name="fromDate"]').val();
            let toDate = $('[name="toDate"]').val();
            let purchaseId = $('[name="PurchaseId"]').val();
            let supplierId = $('[name="SupplierId"]').val();

            if (!fromDate && !toDate && !purchaseId && !supplierId) {
                Swal.fire('Warning', 'Please select at least one filter before searching!', 'warning');
                event.preventDefault();
            }
        });
    });
</script>