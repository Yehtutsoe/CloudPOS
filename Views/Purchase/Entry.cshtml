@model PurchaseWithDetailViewModel

<form asp-action="Entry" asp-controller="Purchase" method="post" class="p-4 bg-light shadow rounded">
    <div class="row">
        <div class="col-md-6">
            <div class="form-group mb-3">
                <label class="form-label fw-bold" asp-for="Purchase.PurchaseDate">Purchase Date</label>
                <input type="date" asp-for="Purchase.PurchaseDate" class="form-control" required />
                <span class="text-danger" asp-validation-for="Purchase.PurchaseDate"></span>
            </div>
            <div class="form-group mb-3">
                <label class="form-label fw-bold" asp-for="Purchase.VoucherNo">Voucher No</label>
                <input type="text" asp-for="Purchase.VoucherNo" class="form-control" required />
                <span class="text-danger" asp-validation-for="Purchase.VoucherNo"></span>
            </div>
            <div class="form-group mb-3">
                <label class="form-label fw-bold" asp-for="Purchase.SupplierId">Supplier</label>
                <select asp-for="Purchase.SupplierId" class="form-select" required>
                    <option value="">[ Select Supplier ]</option>
                    @foreach (var supplier in ViewBag.Suppliers)
                    {
                        <option value="@supplier.Id">@supplier.Name</option>
                    }
                </select>
                <span asp-validation-for="Purchase.SupplierId" class="text-danger"></span>
            </div>
        </div>
    </div>

    <!-- Product Details -->
    <div class="row mb-3">
        <div class="col-md-3">
            <label class="form-label fw-bold">Product</label>
            <select class="form-select" id="ProductId">
                <option value="">[ Select Product ]</option>
                @foreach (var product in ViewBag.Products)
                {
                    <option value="@product.Id" data-name="@product.Name">@product.Name</option>
                }
            </select>
        </div>
        <div class="col-md-2">
            <label class="form-label fw-bold">Quantity</label>
            <input type="number" id="Quantity" class="form-control" min="1" required />
        </div>
        <div class="col-md-2">
            <label class="form-label fw-bold">Price</label>
            <input type="number" id="Price" class="form-control" step="0.01" min="0" required />
        </div>
        <div class="col-md-2 d-flex align-items-end">
            <button type="button" class="btn btn-primary w-100" id="addItemButton">Add Item</button>
        </div>
    </div>

    <div id="itemSelection" class="mt-3" style="display:none;">
        <table class="table table-striped table-bordered">
            <thead class="table-dark">
                <tr>
                    <th>Product Name</th>
                    <th>Quantity</th>
                    <th>Price</th>
                    <th>Total Price</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody id="dynamnicTableBody">
                <!-- dynamically added rows for product -->
            </tbody>
        </table>
        <div class="row mt-3 align-items-center">
            <div class="col-md-8 text-end">
                <button type="submit" class="btn btn-primary me-2" id="entryButton">Submit</button>
                <button type="button" class="btn btn-secondary" onclick="confirmRefresh()">Refresh</button>
            </div>
            <div class="col-md-4">
                <label class="form-label fw-bold">Total Amount</label>
                <input type="text" id="totalAmount" class="form-control text-end fw-bold" readonly />
            </div>
        </div>
    </div>

    @* Hidden input fields to enable MVC binding for ItemDetails *@
    <div id="hiddenItemDetails"></div>
</form>

<script>
    let totalAmount = 0;
    let itemAdded = false;

    function addItem(){
        const product = document.getElementById("ProductId").value;
        const productName = document.getElementById("ProductId").options[document.getElementById("ProductId").selectedIndex].text;
        const quantity = parseFloat(document.getElementById("Quantity").value);
        const price = parseFloat(document.getElementById("Price").value);
        const totalPrice = (quantity * price).toFixed(2);

        if(!product || !quantity || !price){
            Swal.fire('Error', 'Please fill all fields', 'error');
            return;
        }

        totalAmount += parseFloat(totalPrice);
        document.getElementById("totalAmount").value = totalAmount.toFixed(2);

        if(!itemAdded){
            document.getElementById("itemSelection").style.display = 'block';
            itemAdded = true;
        }

        const tableBody = document.getElementById("dynamnicTableBody");
        const newRow = document.createElement("tr");
        newRow.innerHTML = `
            <td>${productName}</td>
            <td>${quantity}</td>
            <td>${price.toFixed(2)}</td>
            <td>${totalPrice}</td>
            <td><button type="button" class="btn btn-danger btn-sm" onclick="deleteRow(this, ${totalPrice})">Delete</button></td>`;
        tableBody.appendChild(newRow);
    }

    function deleteRow(button, price){
        if (confirm("Are you sure you want to delete this item?")) {
            const row = button.closest("tr");
            row.remove();
            totalAmount -= parseFloat(price);
            document.getElementById("totalAmount").value = totalAmount.toFixed(2);
            if (!document.getElementById("dynamnicTableBody").children.length) {
                document.getElementById("itemSelection").style.display = 'none';
                itemAdded = false;
            }
        }
    }

    function confirmRefresh() {
        Swal.fire({
            title: 'Are you sure?',
            text: 'All unsaved data will be lost.',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Yes, refresh it!',
        }).then((result) => {
            if (result.isConfirmed) {
                refreshList();
            }
        });
    }

    function refreshList() {
        document.getElementById("dynamnicTableBody").innerHTML = '';
        document.getElementById("hiddenItemDetails").innerHTML = '';
        totalAmount = 0;
        document.getElementById("totalAmount").value = totalAmount.toFixed(2);
        document.getElementById("itemSelection").style.display = 'none';
        itemAdded = false;
    }

    document.getElementById("addItemButton").addEventListener('click', addItem);
</script>